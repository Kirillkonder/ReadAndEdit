import { UserRepository } from "../database/User";

export async function handleSuccessfulPayment(ctx: any) {
  const userId = ctx.from.id;
  const repo = new UserRepository();

  const paidUntil = Date.now() + 30 * 24 * 60 * 60 * 1000; // +30 –¥–Ω–µ–π
  await repo.updateUserPayment(userId, paidUntil);

  await ctx.reply("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π üíé");

  // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
  const ADMIN_ID = Number(process.env.ADMIN_ID || 0);
  if (ADMIN_ID) {
    await ctx.api.sendMessage(
      ADMIN_ID,
      `üí∞ –ù–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ–ø–ª–∞—Ç–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –¥–æ ${new Date(
        paidUntil
      ).toLocaleString()}`
    );
  }
}
