// src/commands/subscribe.ts
import { Context } from "grammy";
import { UserRepository } from "../database/User";

export const SUBSCRIPTION_PRICE_STARS = 75;
const ADMIN_ID = 123456789; // üîπ –£–∫–∞–∂–∏ —Å–≤–æ–π Telegram ID –∑–¥–µ—Å—å

export async function subscribeCommand(ctx: Context) {
  const userId = ctx.from?.id;
  if (!userId) return;

  // ‚úÖ –ï—Å–ª–∏ –∞–¥–º–∏–Ω ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ
  if (userId === ADMIN_ID) {
    const userRepo = new UserRepository();
    const paidUntil = Date.now() + 1000 * 60 * 60 * 24 * 365; // 1 –≥–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
    await userRepo.updateUser(userId, { paidUntil });

    await ctx.reply("üíé –í—ã ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ 1 –≥–æ–¥.");
    return;
  }

  // üí∞ –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø–ª–∞—Ç—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const priceStars = SUBSCRIPTION_PRICE_STARS;
  const payload = `subscribe_monthly_${userId}_${Date.now()}`;

  const chatId = ctx.chat?.id ?? ctx.from?.id;
  if (!chatId) {
    console.error("subscribeCommand: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å chatId", ctx.update);
    try {
      await (ctx as any).answerCallbackQuery?.({
        text: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–ø–ª–∞—Ç—É",
        show_alert: true,
      });
    } catch {}
    return;
  }

  const invoice = {
    title: "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞ (1 –º–µ—Å—è—Ü)",
    description: "–û–ø–ª–∞—Ç–∞ –º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ (75‚≠ê/–º–µ—Å)",
    payload,
    currency: "XTR", // Telegram Stars
    prices: [{ label: "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü", amount: priceStars }],
  };

  try {
    await ctx.api.sendInvoice(chatId, invoice);
  } catch (err) {
    console.error("subscribeCommand: –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—á–µ—Ç–∞:", err);
    try {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–ø–ª–∞—Ç—É. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –±–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ Stars.");
    } catch {}
  }
}
